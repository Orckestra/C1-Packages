<?xml version="1.0" standalone="yes"?>
<mi:PackageInstaller xmlns:mi="http://www.composite.net/ns/management/packageinstaller/1.0">
	<mi:PackageRequirements minimumCompositeVersion="6.8.0000.0000" maximumCompositeVersion="9.9999.9999.9999" />
	<mi:PackageInformation 
    name="Orckestra.Web.Typescript" 
    groupName="Orckestra.Web" 
    version="1.0.0"
    author="Orckestra A/S" 
    website="https://c1.orckestra.com/" 
    readMoreUrl="https://docs.c1.orckestra.com/" 
    id="7d27b88a-f79e-4ec1-919a-24ffbd457384" 
    canBeUninstalled="true" 
    systemLocking="hard" 
    flushOnCompletion="true" 
    reloadConsoleOnCompletion="false">
		<TechnicalDetails>
      Package provides typescripts compilation into javascripts using Microsoft Typescript Compilator of version 3.1.5.
      Typescripts changes can critically influence on alive web site, therefore pretty recommended to provide any tests,
      changes or configurations both with this package and with your typescripts in test enviroment, not on alive web site.
    </TechnicalDetails>
		<Description>
      Package is preconfigured to be ready to use on default RefApp application. By default, typescripts will be looking at
      the folder ~/UI.Package/Typescript and will be compiled into a file ~/UI.Package/Javascript/orckestra.composer.js. 

      Package has 3 level of settings:
      - General settings;
      - Package settings;
      - Compilation settings.

      General settings located in the root Web.config of your site and allows you to turn on or to turn off this package.
      To turn on or to turn off this package open web.config in the root of your site, locate to configuration/appSettings
      and find a key "Orckestra.Web.Typescripb.Enable". Here you can set up "true" or "false" value depending what you need.

      Package settings located in Bin folder of your site and allows you to change package settings and to create tasks.
      To manage your package settings, open Bin folder and locate to the Orckestra.Web.Typescript.dll.cmp.xml file. Explanation
      about purpose of every setting you can find in this file in comments. Also a typescript task contains a path to a
      compilation settings file.

      Compilation settings defined in tsconfig.json file, originally used by TypescriptCompiler for compilation. The path to the
      tsconfig.json file is configuring in tasks in package settings. Default tsconfig.json file has minimun settings, but you 
      can specify any other compilation settings. The only restriction, you must set up outFile value there. 
      More about tsconfig read at https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
    </Description>
	</mi:PackageInformation>
  <mi:PackageFragmentInstallers>
    <mi:Add installerType="Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentInstaller, Composite" 
            uninstallerType="Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentUninstaller, Composite">
      <Files>
        <File sourceFilename="~\Bin\Orckestra.Web.Typescript.dll" targetFilename="~\Bin\Orckestra.Web.Typescript.dll" allowOverwrite="true" />
        <File sourceFilename="~\Bin\Orckestra.Web.Typescript.dll.cmp.xml" targetFilename="~\Bin\Orckestra.Web.Typescript.dll.cmp.xml" allowOverwrite="true" />
        <File sourceFilename="~\Bin\Orckestra.Web.Typescript.dll.cmp.xsd" targetFilename="~\Bin\Orckestra.Web.Typescript.dll.cmp.xsd" allowOverwrite="true" />
        <File sourceFilename="~\tsconfig.json" targetFilename="~\tsconfig.json" allowOverwrite="false" />
      </Files>
      <Directories>
        <Directory sourceDirectory="~\Bin\TypescriptCompiler\" targetDirectory="~\Bin\TypescriptCompiler\" allowOverwrite="true" deleteTargetDirectory="false"/>
      </Directories>
    </mi:Add>
    <mi:Add 
      installerType="Composite.Core.PackageSystem.PackageFragmentInstallers.DllPackageFragmentInstaller, Composite" 
      uninstallerType="Composite.Core.PackageSystem.PackageFragmentInstallers.DllPackageFragmentUninstaller, Composite">
      <Files>
        <File sourceFilename="~\Bin\NUglify.dll" targetFilename="~\Bin\NUglify.dll" allowOverwrite="true" addAssemblyBinding="true"/>
      </Files>
    </mi:Add>
    <mi:Add
  installerType="Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentInstaller, Composite"
  uninstallerType="Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentUninstaller, Composite">
      <XslFiles>
        <XslFile pathXml="~/Web.config" installXsl="~\Web.config\Install.xsl" uninstallXsl="~\Web.config\Uninstall.xsl" />
      </XslFiles>
    </mi:Add>
  </mi:PackageFragmentInstallers>
</mi:PackageInstaller>